global rawdata C:\Users\fanga\Desktop\Econ Materials\STATA\replications in stata\AirPollu-criminal-rep\Raw-Data
global data C:\Users\fanga\Desktop\Econ Materials\STATA\replications in stata\AirPollu-criminal-rep\Data
clear all
*this set up will be permanently changed in stata
set mem 1000m
set matsize 2000

//Step1: Append Data//
insheet using "$rawdata/pm10_chicago_20000101_20041231.txt", comma clear
save "$data/temp.dta", replace
insheet using "$rawdata/pm10_chicago_20050101_20091231.txt", comma clear
save "$data/temp2.dta", replace
insheet using "$rawdata/pm10_chicago_20100101_20121231.txt", comma clear
append using "$data/temp.dta"
append using "$data/temp2.dta"

drop if latitude == "END OF FILE"
destring latitude longitude, replace

gen str monitorid = string(county)+"_"+string(sitenum)+"_"+string(poc)

//Step2: Generate Hourly Data//

preserve

keep if sampleduration=="1 HOUR"
gen observed = !mi(samplemeasurement)

bys monitorid datelocal: egen num_hrly_obs = sum(observed)

* KEEP DAYS WITH >= 18 OBSERVATIONS;
keep if num_hrly_obs >= 18

*generate variable for date and hour
gen date = date(datelocal,"YMD",2015) //When a two-digit year is encountered, the largest year, topyear, that does not exceed Y isreturned.
format date %td

* substr uses by programmers who want to extract a subset of bytes from a string
gen hour = substr(hourlocal,1,2)
destring hour, replace

rename samplemeasurement pm10hrly
lab var pm10hrly "Hourly PM10, micrograms/cu. meter"

keep latitude longitude datum monitorid statecode countycode sitenum poc pm10hrly date hour
compress

notes: PM10 monitors in Chicago CBSA;
notes: Keep only monitors taking hourly observations;
notes: Keep only monitor-days with 18 or more hourly observations;
notes: Generated by extract_chicago_pm10_2000_2012.do;
save "$data/chicago_pm10_2000_2012_hourly.dta", replace

restore

//Step3: Generate Daily Data//
gen observed = !mi(samplemeasurement)
 
bys monitorid datelocal sampleduration: egen temp_obs = sum(observed)
bys monitorid datelocal sampleduration: egen temp_max = max(samplemeasurement)
bys monitorid datelocal sampleduration: egen temp_avg = mean(samplemeasurement)

*Derivation method: choose max(1-HOUR num, 24-HOUR num) since the smaller one is a missing value
replace temp_obs =. if sampleduration == "24-HR BLK AVG"
bys monitorid datelocal: egen num_hrly_obs_pm10 = max(temp_obs)
replace temp_max =. if sampleduration == "24-HR BLK AVG"
bys monitorid datelocal: egen max24hr_pm10_derived = max(temp_max)
replace temp_avg =. if sampleduration == "24-HR BLK AVG"
bys monitorid datelocal: egen avg24hr_pm10_derived = max(temp_avg)

*Keep only daily 24-hour obs
sort monitorid datelocal hourlocal

*only sampleduration == "24_HOUR" has samplefrequency != missing (?)
replace samplefrequency = samplefrequency[_n-1] if mi(samplefrequency) & sampleduration == "24 HOUR" & ///
						 monitorid == monitorid[_n-1]
						 
keep if (sampleduration == "24-HR BLK AVG")|(sampleduration == "24-HOUR" & samplefrequency == "EVERY DAY")
replace num_hrly_obs_pm10 =. if sampleduration == "24 HOUR"

* GENERATE DATE AND HOUR VARIABLES
gen date = date(datelocal,"YMD",2015)
format date %td

drop *gmt

rename samplemeasurement daily_pm10_notderived
label var daily_pm10_notderived "PM10 DAILY MEASUREMENT -- DIRECTLY FROM DATA, micrograms/cu. meter"
label var avg24hr_pm10_derived "PM10 DAILY MEASUREMENT -- DERIVED FROM HOURLY DATA, micrograms/cu. meter"
label var max24hr_pm10_derived "MAX 1-HOUR PM10 MEASUREMENT -- DERVIED FROM HOURLY DATA, micrograms/cu. meter"
replace max24hr_pm10_derived = . if mi(num_hrly_obs_pm10)

erase "$data/temp.dta"
erase "$data/temp2.dta"

notes: PM10 monitors in Chicago CBSA
notes: Keep only daily observations
notes: If based on hourly obs, only keeps those with 18 or more obs in a day
notes: True daily monitors will have a missing value for num_hrly_obs_pm10
notes: Generated by extract_chicago_pm10_2000_2012.do

save "$data/chicago_pm10_2000_2012_daily.dta", replace

